{"version":3,"sources":["crypto (ignored)","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/pages/posts/post-by-user/post-by-user.component.ts","./src/app/pages/posts/post-by-user/post-by-user.component.html","./src/app/pages/users/users.service.ts","./src/app/pages/posts/post-list.component.ts","./src/app/pages/posts/post-list.component.html","./src/environments/environment.ts","./src/app/pages/users/user-list/users/users.component.ts","./src/app/pages/users/user-list/users/users.component.html","./src/app/pages/users/user-list/user-list.component.html","./src/app/pages/users/user-list/user-list.component.ts","./src/app/pages/posts/new-post/new-post.component.ts","./src/app/pages/posts/new-post/new-post.component.html","./src/app/homepage/homepage.component.html","./src/app/homepage/homepage.component.ts","./src/app/pages/posts/post-detail/post-detail.component.ts","./src/app/pages/posts/post-detail/post-detail.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/pages/posts/posts.service.ts","./src/app/app-routing.module.ts","./src/app/homepage/home-post/home-post.component.ts","./src/app/homepage/home-post/home-post.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark mb-4\">\r\n    <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"/\">\r\n            <img src=\"../../../assets/svg/logo.svg\" alt=\"\">\r\n        </a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n            <ul class=\"navbar-nav nav justify-content-center\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/users' routerLinkActive=\"nav-active\" >Users</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" [routerLink]=\"['/posts']\" routerLinkActive=\"nav-active\">Posts</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        \r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/pages/users/users.service';\nimport { User } from 'src/app/pages/users/users.interface';\nimport { AvatarGenerator } from 'random-avatar-generator';\nimport { PostService } from 'src/app/pages/posts/posts.service';\nimport { Post } from '../post.interface';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-post-by-user',\n  templateUrl: './post-by-user.component.html',\n  styleUrls: ['./post-by-user.component.scss']\n})\nexport class PostByUserComponent implements OnInit {\n\n  public generator = new AvatarGenerator();\n  public user:User\n  public posts:Post[]\n  public userID:string;\n  public userIDSubscription:string;\n  public currentURL: string;\n  public avatarUrl: string = '';\n\n  constructor(private PostService: PostService, private UserService: UserService, private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.userID =this.route.snapshot.params.id;\n    this.route.paramMap.subscribe(params => {\n      this.userIDSubscription = params.get(\"id\")\n    });\n\n    this.router.events.subscribe(() =>{\n      this.currentURL = this.router.url;\n    })\n\n    this.currentURL = this.router.url;\n  \n\n    this.UserService.getUserById(this.userID).subscribe(\n      (res) => {\n        this.user = res;\n      },\n      (error) => {\n        console.log('Error:', error);\n      },\n      () => {\n        console.log('Done');\n      }\n    );\n\n\n    this.PostService.getPostByUser(this.userID).subscribe(\n      (res) => {\n        this.posts = res;\n      },\n      (error) => {\n        console.log('Error:', error);\n      },\n      () => {\n        console.log('Done');\n      }\n    );\n\n    this.avatarUrl = this.generator.generateRandomAvatar('avatar');\n    \n  }\n\n}\n","<div class=\"user__posts\">\r\n    <h2 class=\"user__posts--mainTitle w-100 text-center\">Posts by User</h2>\r\n    <div class=\"user__posts--card card\">\r\n        <div class=\"card-body\">\r\n            <p class=\"card-text\">\r\n                <small>User ID: {{ user?.id }}</small>\r\n            </p>\r\n            <hr />\r\n            <div class=\"user__posts--title\">\r\n                <img class=\"user__info--avatar\" src=\"{{ avatarUrl }}\" alt=\"\" />\r\n                <span>\r\n          <h4 class=\"user__posts--name card-title\">{{ user?.name }}</h4>\r\n          <p class=\"user__posts--username card-text\">\r\n            <small>Username: {{ user?.username }}</small>\r\n          </p>\r\n          <p class=\"card-text\">\r\n            <small>email: {{ user?.email }}</small>\r\n        </p>\r\n        <p class=\"card-text\">{{ user?.website }}</p>\r\n        </span>\r\n            </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex flex-wrap\">\r\n    <div class=\"col-md-6\" *ngFor=\"let post of posts\">\r\n        <div class=\"single-blog-user\">\r\n            <div class=\"single-blog-user--title\">\r\n                <small>Post ID: {{ post?.id }}</small><br>\r\n                <small>User ID: {{ post?.userId }}</small>\r\n            </div>\r\n            <hr />\r\n            <div class=\"single-blog-user--thumbnail\">\r\n                <img class=\"blog-img\" src=\"https://picsum.photos/420/300\" alt=\"blog-img\" />\r\n            </div>\r\n            <div class=\"single-blog-user--content\">\r\n                <h4 class=\"blog-title\">\r\n                    <a routerLink=\"../../post-detail/{{ post.id }}\">{{ post?.title }}</a>\r\n                </h4>\r\n                <div class=\"single-blog-user--body\">\r\n                    <p> {{ post?.body }}</p>\r\n                   <small class=\"float-right\">By {{user?.name}}</small>\r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { User } from './users.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public getUsers(): Observable<any> {\r\n    return this._http.get<User[]>(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      { observe: 'body', responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  public getUserById(id: string): Observable<any> {\r\n    return this._http.get<User[]>(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      { observe: 'body', responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  public deleteUser(id: number): Observable<any> {\r\n    return this._http.delete<User[]>(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      { observe: 'body', responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  public editUser(newUser: User): Observable<any> {\r\n    return this._http.patch<User[]>(\r\n      'https://jsonplaceholder.typicode.com/users/1',\r\n      newUser\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/pages/posts/posts.service';\r\nimport { UserService } from 'src/app/pages/users/users.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { User } from '../users/users.interface';\r\nimport { Post } from './post.interface';\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.scss'],\r\n})\r\nexport class PostListComponent implements OnInit {\r\n  public userId: number;\r\n  public id: number;\r\n  public title: string;\r\n  public body: string;\r\n  public postForm: FormGroup;\r\n  public formActive = false;\r\n  public posts: Post[] = [];\r\n  public post: Post;\r\n  public message!: string;\r\n  public users: User[] = [];\r\n\r\n  constructor(\r\n    private PostService: PostService,\r\n    private UserService: UserService,\r\n    public formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.UserService.getUsers().subscribe(\r\n      (res) => {\r\n        this.users = res;\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        return;\r\n      }\r\n    );\r\n\r\n    this.PostService.getPosts().subscribe(\r\n      (res) => {\r\n        this.posts = res;\r\n        console.log('Data:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        console.log('Posts received');\r\n      }\r\n    );\r\n\r\n    this.postForm = this.formBuilder.group({\r\n      userId: ['', [Validators.required, Validators.minLength(3)]],\r\n      id: ['', [Validators.required, Validators.minLength(3)]],\r\n      title: ['', [Validators.required, Validators.minLength(3)]],\r\n      body: ['', [Validators.required, Validators.minLength(3)]],\r\n    });\r\n  }\r\n\r\n  showForm() {\r\n    this.formActive = !this.formActive;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.posts.unshift(this.postForm.value);\r\n    this.formActive = !this.formActive;\r\n    this.post = this.postForm.value;\r\n    this.PostService.newPost(this.post).subscribe(\r\n      (res) => {\r\n        this.post = res;\r\n        console.log('New Post:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  borrarPost(id: number) {\r\n    this.posts = this.posts.filter((post) => post.id != id);\r\n    this.PostService.deletePost(id).subscribe(\r\n      (res) => {\r\n        this.post = res;\r\n        console.log('Post deleted:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  editPost(post: Post) {\r\n    this.posts.splice(post.id - 1, 1, post);\r\n  }\r\n}\r\n","\r\n        <div class=\"col-md-12 text-center mt-4\">\r\n            <button *ngIf=\"!formActive; else buttonClose\" (click)=\"showForm()\" class=\"nav-link btn btn-warning btn-sm text-white my-0 mx-auto\">\r\n        Create Post\r\n      </button>\r\n            <ng-template #buttonClose>\r\n                <button (click)=\"showForm()\" class=\"nav-link btn btn-info btn-sm text-white my-0 mx-auto\">\r\n          Close Form\r\n        </button>\r\n            </ng-template>\r\n        </div>\r\n        <div class=\"post-list col-md-12\">\r\n            <app-new-post class=\"post-single\" *ngFor=\"let post of posts\" [data]=\"post\" (edit)=\"editPost($event)\" (delete)=\"borrarPost($event)\"></app-new-post>\r\n        </div>\r\n\r\n<div class=\"post__form\" [ngClass]=\"{ active: formActive }\">\r\n    <form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\" action=\"\">\r\n        <h2>Create Post</h2>\r\n        <button (click)=\"showForm()\" type=\"button\" class=\"close post__form--times\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n        <div class=\"post__form--section form-group\">\r\n            <label class=\"form-label\" for=\"\">UserID:</label>\r\n            <select formControlName=\"userId\" name=\"userId\" id=\"userId\">\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"7\">7</option>\r\n        <option value=\"8\">8</option>\r\n        <option value=\"9\">9</option>\r\n        <option value=\"10\">10</option>\r\n      </select>\r\n        </div>\r\n        <div class=\"post__form--section form-group\">\r\n            <label class=\"form-label\" for=\"id\">Post ID:</label>\r\n            <input formControlName=\"id\" class=\"form-control\" type=\"number\" />\r\n        </div>\r\n        <div class=\"post__form--section form-group\">\r\n            <label class=\"form-label\" for=\"title\">Post title:</label>\r\n            <input formControlName=\"title\" class=\"form-control\" type=\"text\" />\r\n        </div>\r\n        <div class=\"post__form--section form-group\">\r\n            <label class=\"form-label\" for=\"content\">Post content:</label>\r\n            <textarea formControlName=\"body\" class=\"form-control\" name=\"content\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n        </div>\r\n        <button class=\"btn btn-success\" type=\"submit\">Create Post</button>\r\n    </form>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { User } from '../../users.interface';\r\nimport { AvatarGenerator } from 'random-avatar-generator';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss'],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  public name: string;\r\n  public id: string;\r\n  public username: string;\r\n  public website: string;\r\n  public email: string;\r\n  public userForm: FormGroup;\r\n  public generator = new AvatarGenerator();\r\n  public avatarUrl: string = '';\r\n  public editar = false;\r\n  public usuario: User;\r\n  public newUser: User;\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  get getControl() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  onSubmit(user: User) {\r\n    this.newUser = this.userForm.value;\r\n    this.newUser.id = this.user.id;\r\n    this.user = this.newUser;\r\n    this.editar = false;\r\n    this.edit.emit(this.newUser);\r\n    console.log(this.newUser);\r\n  }\r\n\r\n  @Input('data') user: User;\r\n\r\n  @Output() delete = new EventEmitter<number>();\r\n\r\n  @Output() edit = new EventEmitter<User>();\r\n\r\n  constructor(public formBuilder: FormBuilder) {\r\n    this.avatarUrl = this.generator.generateRandomAvatar('avatar');\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    this.delete.emit(id);\r\n  }\r\n\r\n  editable() {\r\n    this.editar = true;\r\n  }\r\n\r\n  stopEdit() {\r\n    this.editar = false;\r\n  }\r\n\r\n  createForm() {\r\n    this.userForm = this.formBuilder.group({\r\n      id: ['', [Validators.required, Validators.minLength(3)]],\r\n      name: ['', [Validators.required, Validators.minLength(3)]],\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      website: ['', [Validators.required, Validators.minLength(3)]],\r\n      email: ['', [Validators.required, Validators.minLength(3)]],\r\n    });\r\n  }\r\n}\r\n","<div class=\"user__list\">\r\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit(userForm.value)\" class=\"user__list--card card\">\r\n        <div class=\"card-body\">\r\n            <p class=\"card-text\">\r\n                <small>User ID:\r\n          <span *ngIf=\"!editar; else inputUserId\">{{ user?.id }}</span>\r\n          <ng-template #inputUserId>\r\n            {{ user?.id }}\r\n          </ng-template>\r\n        </small>\r\n            </p>\r\n            <hr />\r\n\r\n            <div class=\"user__list--title\">\r\n                <img class=\"user__info--avatar\" src=\"{{ avatarUrl }}\" alt=\"\" />\r\n                <span>\r\n          <h4 class=\"user__list--name card-title\">\r\n            <span *ngIf=\"!editar; else inputUserName\">{{ user?.name }}</span>\r\n                <ng-template #inputUserName>\r\n                    <input [(ngModel)]=\"name\" type=\"text\" formControlName=\"name\" placeholder=\"{{ user?.name }}\" />\r\n                </ng-template>\r\n                </h4>\r\n                <p class=\"user__list--username card-text\">\r\n                    <small>Username:\r\n              <span *ngIf=\"!editar; else inputUserUsername\">{{\r\n                user?.username\r\n              }}</span>\r\n              <ng-template #inputUserUsername>\r\n                <input\r\n                  [(ngModel)]=\"username\"\r\n                  type=\"text\"\r\n                  formControlName=\"username\"\r\n                  placeholder=\"{{ user?.username }}\"\r\n                /> </ng-template\r\n            ></small>\r\n                </p>\r\n                <p class=\"card-text\">\r\n                    <small>Email:\r\n              <span *ngIf=\"!editar; else inputUserEmail\">{{\r\n                user?.email\r\n              }}</span>\r\n              <ng-template #inputUserEmail>\r\n                <input\r\n                  [(ngModel)]=\"email\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  placeholder=\"{{ user?.email }}\"\r\n                />\r\n              </ng-template>\r\n            </small>\r\n                </p>\r\n                <p class=\"card-text\">\r\n                    <small>\r\n              Website:\r\n              <span *ngIf=\"!editar; else inputUserWebsite\">{{\r\n                user?.website\r\n              }}</span>\r\n              <ng-template #inputUserWebsite>\r\n                <input\r\n                  [(ngModel)]=\"website\"\r\n                  type=\"text\"\r\n                  formControlName=\"website\"\r\n                  placeholder=\"{{ user?.website }}\"\r\n                />\r\n              </ng-template>\r\n            </small>\r\n                </p>\r\n                </span>\r\n            </div>\r\n            <div class=\"btn-group col-md-12\">\r\n                <button *ngIf=\"!editar; else buttonSave\" class=\"btn btn-info\" (click)=\"editable()\">\r\n          Edit User\r\n        </button>\r\n                <ng-template #buttonSave>\r\n                    <button [disabled]=\"!name || !username || !email || !website\" type=\"submit\" class=\"btn btn-success\">\r\n            Save User\r\n          </button>\r\n                </ng-template>\r\n                <button class=\"btn btn-primary\" routerLink=\"../post-by-user/{{ user?.id }}\">\r\n          View Posts\r\n        </button>\r\n                <button class=\"btn btn-danger\" (click)=\"deleteUser(user.id)\">\r\n          Delete User\r\n        </button>\r\n            </div>\r\n            <a *ngIf=\"editar\" class=\"stopedit\" (click)=\"stopEdit()\">Stop Editing</a>\r\n        </div>\r\n    </form>\r\n</div>","<div class=\"user__info mt-4\">\r\n    <h2 class=\"user__info--mainTitle w-100 text-center\">Users</h2>\r\n    <app-users *ngFor=\"let user of users\" [data]=\"user\" (delete)=\"borrarUser($event)\" (edit)=\"editarUsuario($event)\"></app-users>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/pages/users/users.service';\r\nimport { User } from '../users.interface';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss'],\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  public users: User[] = [];\r\n  public user: User;\r\n  PostService: any;\r\n\r\n  constructor(private UserService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.UserService.getUsers().subscribe(\r\n      (res) => {\r\n        this.users = res;\r\n        console.log('Data:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        console.log('Users received');\r\n      }\r\n    );\r\n  }\r\n\r\n  borrarUser(id: number) {\r\n    this.users = this.users.filter((user) => user.id != id);\r\n    console.log(this.users);\r\n    this.UserService.deleteUser(id).subscribe(\r\n      (res) => {\r\n        this.user = res;\r\n        console.log('User deleted:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  editarUsuario(user: User) {\r\n    this.users.splice(user.id - 1, 1, user);\r\n    console.log(this.users);\r\n    this.UserService.editUser(user).subscribe(\r\n      (res) => {\r\n        this.user = res;\r\n        console.log('User edited:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        return;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { AvatarGenerator } from 'random-avatar-generator';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/pages/users/users.service';\r\nimport { PostService } from 'src/app/pages/posts/posts.service';\r\nimport { User } from '../../users/users.interface';\r\nimport { Post } from '../post.interface';\r\n\r\n@Component({\r\n  selector: 'app-new-post',\r\n  templateUrl: './new-post.component.html',\r\n  styleUrls: ['./new-post.component.scss'],\r\n})\r\nexport class NewPostComponent implements OnInit {\r\n  constructor(\r\n    private UserService: UserService,\r\n    private PostService: PostService,\r\n    public formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  @Input('data') post: Post;\r\n\r\n  @Output() delete = new EventEmitter<number>();\r\n\r\n  @Output() edit = new EventEmitter<Post>();\r\n\r\n  @Output() clickOutside = new EventEmitter<void>();\r\n\r\n  public title: string;\r\n  public body: string;\r\n  public id: number;\r\n  public userId: number;\r\n  public generator = new AvatarGenerator();\r\n  public avatarUrl: string = '';\r\n  public activeEdition = false;\r\n  public postForm: FormGroup;\r\n  public newPost: Post;\r\n  public posts: Post;\r\n  public users: User[];\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.avatarUrl = this.generator.generateRandomAvatar('avatar');\r\n  }\r\n\r\n  get getControl() {\r\n    return this.postForm.controls;\r\n  }\r\n\r\n  createForm() {\r\n    this.postForm = this.formBuilder.group({\r\n      title: ['', [Validators.required, Validators.minLength(3)]],\r\n      body: ['', [Validators.required, Validators.minLength(3)]],\r\n      id: ['', [Validators.required, Validators.minLength(2)]],\r\n      userId: ['', [Validators.required, Validators.minLength(2)]],\r\n    });\r\n  }\r\n\r\n  deletePost(id: number) {\r\n    this.delete.emit(id);\r\n  }\r\n\r\n  editPost() {\r\n    this.activeEdition = true;\r\n  }\r\n\r\n  stopEdit() {\r\n    this.activeEdition = false;\r\n  }\r\n\r\n  onSubmit(post: Post) {\r\n    this.newPost = this.postForm.value;\r\n    this.newPost.id = this.post.id;\r\n    this.newPost.userId = this.post.userId;\r\n    this.post = this.newPost;\r\n    this.activeEdition = false;\r\n    this.edit.emit(this.newPost);\r\n    this.PostService.putPost(this.newPost).subscribe(\r\n      (res) => {\r\n        this.posts = res;\r\n        console.log('Put:', res);\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        console.log('Done');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"single-blog-item\">\r\n    <div class=\"blog-top-title\">\r\n        <small>Post ID: {{ post?.id }}</small\r\n    ><br />\r\n    <small>User ID: {{ post?.userId }}</small>\r\n    </div>\r\n    <hr />\r\n    <div class=\"blog-thumnail\">\r\n        <img class=\"blog-img\" src=\"https://picsum.photos/420/300\" alt=\"blog-img\" />\r\n    </div>\r\n    <form class=\"postForm\" [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit(postForm.value)\" class=\"blog-content\">\r\n        <input style=\"display: none\" [(ngModel)]=\"id\" type=\"text\" formControlName=\"id\" value=\"{{ post?.id }}\" />\r\n        <input style=\"display: none\" [(ngModel)]=\"userId\" type=\"text\" formControlName=\"userId\" value=\"{{ post?.userId }}\" />\r\n        <h4 class=\"blog-title\">\r\n            <a *ngIf=\"!activeEdition; else inputTitle\" routerLink=\"../post-detail/{{ post.id }}\">{{ post?.title }}</a\r\n      >\r\n      <ng-template #inputTitle>\r\n        <input\r\n          [(ngModel)]=\"title\"\r\n          type=\"text\"\r\n          formControlName=\"title\"\r\n          placeholder=\"{{ post?.title }}\"\r\n        />\r\n      </ng-template>\r\n    </h4>\r\n    <p *ngIf=\"!activeEdition; else inputBody\" class=\"blog-body\">\r\n      {{ post?.body }}\r\n    </p>\r\n    <ng-template #inputBody>\r\n      <textarea\r\n        [(ngModel)]=\"body\"\r\n        formControlName=\"body\"\r\n        class=\"form-control\"\r\n        name=\"body\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        placeholder=\"{{ post?.body }}\"\r\n      ></textarea>\r\n      <button type=\"submit\" class=\"btn btn-success mt-2\">Save Post</button>\r\n      <a *ngIf=\"activeEdition\" class=\"stopedit\" (click)=\"stopEdit()\"\r\n        >Stop Editing</a\r\n      >\r\n    </ng-template>\r\n  </form>\r\n  <div class=\"btn-group col-md-12 mt-5\">\r\n    <button routerLink=\"../post-detail/{{ post.id }}\" class=\"btn btn-info\">\r\n      View Post\r\n    </button>\r\n    <button\r\n      *ngIf=\"!activeEdition; else editDisabled\"\r\n      (click)=\"editPost()\"\r\n      class=\"btn btn-success\"\r\n    >\r\n      Edit Post\r\n    </button>\r\n    <ng-template #editDisabled>\r\n      <button [disabled]=\"activeEdition\" class=\"btn btn-success\">\r\n        Edit Post\r\n      </button>\r\n    </ng-template>\r\n    <button (click)=\"deletePost(post.id)\" class=\"btn btn-danger\">\r\n      Delete Post\r\n    </button>\r\n  </div>\r\n</div>","<div id=\"demo\" class=\"carousel slide mb-5\" data-ride=\"carousel\">\r\n    <!-- Indicators -->\r\n    <ul class=\"carousel-indicators\">\r\n        <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\r\n        <li data-target=\"#demo\" data-slide-to=\"1\"></li>\r\n        <li data-target=\"#demo\" data-slide-to=\"2\"></li>\r\n    </ul>\r\n\r\n    <!-- The slideshow -->\r\n    <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item active\">\r\n            <img src=\"https://picsum.photos/id/180/1920/300\" alt=\"Angular Nerds\" />\r\n            <div class=\"carousel-caption\">\r\n                <h3>Angular Nerds</h3>\r\n                <p>The best *ngNews ever</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n            <img src=\"https://picsum.photos/id/1/1920/300\" alt=\"Angular Nerds\" />\r\n            <div class=\"carousel-caption\">\r\n                <h3>Angular Nerds</h3>\r\n                <p>The best *ngNews ever</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n            <img src=\"https://picsum.photos/id/2/1920/300\" alt=\"Angular Nerds\" />\r\n            <div class=\"carousel-caption\">\r\n                <h3>Angular Nerds</h3>\r\n                <p>The best *ngNews ever</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Left and right controls -->\r\n    <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\r\n        <span class=\"carousel-control-prev-icon\"></span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\r\n        <span class=\"carousel-control-next-icon\"></span>\r\n    </a>\r\n</div>\r\n\r\n<div class=\"home-posts-container text-center\">\r\n    <h2>Latest Posts</h2>\r\n    <app-home-post *ngFor=\"let post of posts | slice: 0:10; let i = index\" [data]=\"post\">\r\n    </app-home-post>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from 'src/app/pages/posts/posts.service';\r\nimport { Post } from '../pages/posts/post.interface';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.scss'],\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n  public posts: Post[] = [];\r\n\r\n  constructor(private PostService: PostService) {\r\n    this.PostService.getPosts().subscribe(\r\n      (res) => {\r\n        this.posts = res;\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n      },\r\n      () => {\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Comments } from '../comments.interface';\r\nimport { PostService } from 'src/app/pages/posts/posts.service';\r\nimport { UserService } from 'src/app/pages/users/users.service';\r\nimport { Post } from '../post.interface';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AvatarGenerator } from 'random-avatar-generator';\r\nimport { User } from '../../users/users.interface';\r\n\r\n@Component({\r\n  selector: 'app-post-detail',\r\n  templateUrl: './post-detail.component.html',\r\n  styleUrls: ['./post-detail.component.scss'],\r\n})\r\nexport class PostDetailComponent implements OnInit {\r\n  public generator = new AvatarGenerator();\r\n  public comments: Comments[] = [];\r\n  public postById: Post;\r\n  public user: User;\r\n  public avatarUrl: string = '';\r\n  public postID: string;\r\n  public postIDSubscription: string;\r\n  public currentURL: string;\r\n\r\n  constructor(\r\n    private PostService: PostService,\r\n    private UserService: UserService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.postID = this.route.snapshot.params.id;\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.postIDSubscription = params.get('id');\r\n    });\r\n\r\n    this.currentURL = this.router.url;\r\n\r\n    this.router.events.subscribe(() => {\r\n      this.currentURL = this.router.url;\r\n    });\r\n\r\n    this.PostService.commentsByParams(this.postID).subscribe(\r\n      (res) => {\r\n        this.comments = res;\r\n        console.log('Data:', res);\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      },\r\n      () => {\r\n        console.log('Comments received');\r\n      }\r\n    );\r\n\r\n    this.PostService.getPostById(this.postID).subscribe(\r\n      (res) => {\r\n        this.postById = res;\r\n        console.log('Data:', this.postById);\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      },\r\n      () => {\r\n        console.log('Received PostById');\r\n      }\r\n    );\r\n\r\n    this.UserService.getUserById(this.postID).subscribe(\r\n      (res) => {\r\n        this.user = res;\r\n        console.log('Data:', res);\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      },\r\n      () => {\r\n        console.log('Received UserById');\r\n      }\r\n    );\r\n\r\n    this.avatarUrl = this.generator.generateRandomAvatar('avatar');\r\n  }\r\n}\r\n","<div class=\"post col-md-8 my-0 mx-auto\">\r\n    <img class=\"post__banner\" src=\"https://picsum.photos/920/300\" alt=\"\" />\r\n    <div class=\"post__body\">\r\n        <small>Post ID: {{ postById?.id }}</small>\r\n        <hr />\r\n        <h1 class=\"post__body--title\">{{ postById?.title }}</h1>\r\n        <p class=\"post__body--text\">{{ postById?.body }}</p>\r\n        <div class=\"post__user text-right\">\r\n            <img class=\"post__user--avatar\" src=\"{{ avatarUrl }}\" alt=\"\" />\r\n            <small>By: {{ user?.name }}</small>\r\n        </div>\r\n        <hr />\r\n        <h4 class=\"post__body--title\">Comments:</h4>\r\n\r\n        <div class=\"post__body--comments\">\r\n            <ul *ngFor=\"let comment of comments\">\r\n                <li>PostId: {{ comment.postId }}</li>\r\n                <li>Id: {{ comment.id }}</li>\r\n                <li>Name: {{ comment.name }}</li>\r\n                <li>Email: {{ comment.email }}</li>\r\n                <li>Comment: {{ comment.body }}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container-fluid mt-4\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 app-col\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n        <app-footer></app-footer>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './shared/header/header.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\n\r\nimport { UserService } from 'src/app/pages/users/users.service';\r\nimport { PostService } from 'src/app/pages/posts/posts.service';\r\nimport { UserListComponent } from './pages/users/user-list/user-list.component';\r\nimport { PostDetailComponent } from './pages/posts/post-detail/post-detail.component';\r\nimport { NewPostComponent } from './pages/posts/new-post/new-post.component';\r\nimport { PostByUserComponent } from './pages/posts/post-by-user/post-by-user.component';\r\nimport { UsersComponent } from './pages/users/user-list/users/users.component';\r\nimport { PostListComponent } from './pages/posts/post-list.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { HomePostComponent } from './homepage/home-post/home-post.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, \r\n    HeaderComponent, \r\n    FooterComponent, \r\n    UserListComponent, \r\n    PostDetailComponent, \r\n    PostListComponent, \r\n    NewPostComponent, \r\n    PostByUserComponent,\r\n    UsersComponent,\r\n    HomepageComponent,\r\n    HomePostComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [UserService, PostService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-12 text-center mt-5 py-3\">\r\n    <small>AngularNerds - 2021</small>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { User } from '../users/users.interface';\r\nimport { Post } from './post.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PostService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  public getPosts(): Observable<any> {\r\n    return this._http.get<Post[]>(\r\n      'https://jsonplaceholder.typicode.com/posts',\r\n      { observe: 'body', responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  public getPostById(id: string): Observable<any> {\r\n    return this._http.get<Post[]>(\r\n      `https://jsonplaceholder.typicode.com/posts/${id}`,\r\n      { observe: 'body', responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  public getPostByUser(id: string): Observable<any> {\r\n    return this._http.get<Post[]>(\r\n      `https://jsonplaceholder.typicode.com/users/${id}/posts`,\r\n      { observe: 'body', responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  public commentsByParams(id: string): Observable<any> {\r\n    const params = new HttpParams().set('postId', id);\r\n    return this._http.get<Comment[]>(\r\n      'https://jsonplaceholder.typicode.com/comments',\r\n      { params: params }\r\n    );\r\n  }\r\n\r\n  public newPost(newPost: Post): Observable<any> {\r\n    return this._http.post<Post[]>(\r\n      'https://jsonplaceholder.typicode.com/posts',\r\n      newPost\r\n    );\r\n  }\r\n\r\n  public putPost(newPost: Post): Observable<any> {\r\n    return this._http.put<Post[]>(\r\n      'https://jsonplaceholder.typicode.com/posts/1',\r\n      newPost\r\n    );\r\n  }\r\n\r\n  public patchPost(newPost: Post): Observable<any> {\r\n    return this._http.patch<Post[]>(\r\n      'https://jsonplaceholder.typicode.com/posts/1',\r\n      newPost\r\n    );\r\n  }\r\n\r\n  public deletePost(id: number): Observable<any> {\r\n    return this._http.delete<Post[]>(\r\n      `https://jsonplaceholder.typicode.com/posts/${id}`\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { NewPostComponent } from './pages/posts/new-post/new-post.component';\r\nimport { PostByUserComponent } from './pages/posts/post-by-user/post-by-user.component';\r\nimport { PostDetailComponent } from './pages/posts/post-detail/post-detail.component';\r\nimport { PostListComponent } from './pages/posts/post-list.component';\r\nimport { UserListComponent } from './pages/users/user-list/user-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomepageComponent,\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UserListComponent,\r\n  },\r\n  {\r\n    path: 'posts',\r\n    component: PostListComponent,\r\n  },\r\n  {\r\n    path: 'post-detail/:id',\r\n    component: PostDetailComponent,\r\n  },\r\n  {\r\n    path: 'new-post',\r\n    component: NewPostComponent,\r\n  },\r\n  {\r\n    path: 'post-by-user/:id',\r\n    component: PostByUserComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Post } from 'src/app/pages/posts/post.interface';\r\n\r\n@Component({\r\n  selector: 'app-home-post',\r\n  templateUrl: './home-post.component.html',\r\n  styleUrls: ['./home-post.component.scss'],\r\n})\r\nexport class HomePostComponent implements OnInit {\r\n  \r\n  @Input('data') post: Post;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  \r\n}\r\n","<div class=\"card border-dark\" style=\"width: 30vw\">\r\n    <img class=\"card-img-top\" src=\"https://picsum.photos/420/300\" alt=\"Card image cap\" />\r\n\r\n    <div class=\"card-header\">\r\n        <small>Post ID: {{ post?.id }}</small>\r\n        <a href=\"#\" routerLink=\"../post-detail/{{ post.id }}\">\r\n            <h5>{{ post?.title }}</h5>\r\n        </a>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <p class=\"card-text\">{{ post?.body }}</p>\r\n        <a routerLink=\"../post-detail/{{ post.id }}\" class=\"btn btn-primary\">View Post</a\r\n    >\r\n  </div>\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}